<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AuthorBy" xml:space="preserve">
    <value>By {0}</value>
    <comment>Used to show credit to the developer that made the mod</comment>
  </data>
  <data name="BrowseButton" xml:space="preserve">
    <value>Browse...</value>
    <comment>The caption for a file browser's Browse button</comment>
  </data>
  <data name="CancelCaption" xml:space="preserve">
    <value>Cancel</value>
    <comment>The caption for the Cancel button in the Settings window</comment>
  </data>
  <data name="CheckSettings" xml:space="preserve">
    <value>No mods found, check your settings</value>
    <comment>Message letting the user know that there were no mods loaded into the program</comment>
  </data>
  <data name="dnSpyPath" xml:space="preserve">
    <value>dnSpy Path:</value>
    <comment>The caption for the dnSpy file search box</comment>
  </data>
  <data name="dnSpyPathBadError" xml:space="preserve">
    <value>The dnSpy path specified does not exist</value>
    <comment>The error message notifying the user that the path they specified is incorrect</comment>
  </data>
  <data name="DoneCaption" xml:space="preserve">
    <value>Done</value>
    <comment>The caption for the Done button in the Settings window</comment>
  </data>
  <data name="NoResults" xml:space="preserve">
    <value>No Results</value>
    <comment>Informs the user that there were no results for that search</comment>
  </data>
  <data name="OpenDnSpyTooltip" xml:space="preserve">
    <value>Open dnSpy with this mod's assemblies (Ctrl + D)</value>
    <comment>The tooltip shown when hovering over the dnSpy button, informing the user that pressing the button will open dnSpy with the selected mod's assemblies (DLL files)</comment>
  </data>
  <data name="OpenExplorerTooltip" xml:space="preserve">
    <value>Open this mod's folder (Ctrl + E)</value>
    <comment>The tooltip shown when hovering over the Folder button, informing the user that pressing the button will open the mod's folder on their computer</comment>
  </data>
  <data name="OpenSteamTooltip" xml:space="preserve">
    <value>Open the Steam Workshop page for this mod (Ctrl + S)</value>
    <comment>The tooltip shown when hovering over the Steam button, informing the user that pressing the button will open the Steam Workshop for the currently selected mod</comment>
  </data>
  <data name="RWModsDirBadError" xml:space="preserve">
    <value>The RimWorld Mods Directory specified does not exist</value>
    <comment>The error message notifying the user that the path they specified does not exist</comment>
  </data>
  <data name="RWModsDirectoryCaption" xml:space="preserve">
    <value>RimWorld Local Mods Directory (RimWorld\Mods):</value>
    <comment>The caption for the RW Mods directory search box</comment>
  </data>
  <data name="RWModsDirIncorrectError" xml:space="preserve">
    <value>The RimWorld Mods Directory specified appears to be incorrect</value>
    <comment>The error message notifying the user that the path they specified is valid but does not conform to what the program expects it to be</comment>
  </data>
  <data name="RWWorkshopBadError" xml:space="preserve">
    <value>The RimWorld Workshop Directory specified does not exist</value>
    <comment>The error message notifying the user that the path they specified does not exist</comment>
  </data>
  <data name="RWWorkshopCaption" xml:space="preserve">
    <value>RimWorld Workshop Directory (Game ID: 294100):</value>
    <comment>The caption for the RW Workshop directory search box</comment>
  </data>
  <data name="RWWorkshopDirIncorrectError" xml:space="preserve">
    <value>The RimWorld Workshop Directory specified appears to be incorrect</value>
    <comment>The error message notifying the user that the path they specified is valid but does not conform to what the program expects it to be</comment>
  </data>
  <data name="SearchGhostText" xml:space="preserve">
    <value>Search...</value>
    <comment>The string used to inform the user that typing in this text box searches the mod list</comment>
  </data>
  <data name="SearchTooltip" xml:space="preserve">
    <value>Search for mods by name or author (Ctrl + F)</value>
    <comment>The tooltip shown when hovering over the search bar, informing the user that they can search for mods by name or author</comment>
  </data>
  <data name="SelectAMod" xml:space="preserve">
    <value>Select a mod to get started</value>
    <comment>Informs the user that they should select a mod to get started using the program</comment>
  </data>
  <data name="SettingsTitle" xml:space="preserve">
    <value>Settings</value>
    <comment>The title for the Settings window</comment>
  </data>
  <data name="SettingsTooltip" xml:space="preserve">
    <value>Open the Settings window (Ctrl + G)</value>
    <comment>The tooltip shown when hovering over the Settings button, informing the user that pressing the button will open the Settings dialog</comment>
  </data>
  <data name="StatusBarLoadCount" xml:space="preserve">
    <value>Showing {0} out of {1} mods</value>
    <comment>The string telling the user how many mods are being filtered out</comment>
  </data>
  <data name="StatusBarLoadCountSingular" xml:space="preserve">
    <value>Showing {0} out of {1} mod</value>
    <comment>Same as StatusBarLoadCount except singular</comment>
  </data>
</root>